/ Note: The reason we traverse back up on eefps on the line:
  ```
    extractions_extraction_forms_projects_section: eefps.link_to_type1,
  ```
  is because if we tried to ExtractionsExtractionFormsProjectsSectionsType1.find_or_create_by
  using the current eefps (which is the type2 section, we'd be finding the wrong object. It
  might be better to just use .find_by! since we are assured of the existence of the
  eefps.

.column.row
  - eefps_qrcf = ExtractionsExtractionFormsProjectsSectionsQuestionRowColumnField.find_or_create_by( \
    extractions_extraction_forms_projects_section: eefps,
    question_row_column_field: qrc.question_row_column_fields.first)

  - eefpst1_selection.each do |eefpst1|
    - ExtractionsExtractionFormsProjectsSectionsQuestionRowColumnFieldsExtractionsExtractionFormsProjectsSectionsType1.find_or_create_by( \
      extractions_extraction_forms_projects_sections_question_row_column_field: eefps_qrcf,
      extractions_extraction_forms_projects_sections_type1: eefpst1 )

  - record = Record.find_or_create_by(recordable: eefps_qrcf)
  = simple_form_for(eefps_qrcf, html: { data: { 'abide': '', 'live-validate': true } }) do |f|
    = f.error_notification

    - options = qrc.question_row_columns_question_row_column_options.\
      where(question_row_column_option_id: 1).\
      collect { |opt| [opt.name, opt.id, { 'data-prereq': "prereq-#{ opt.class }-#{ opt.id }" }] }
    = f.association :question_row_columns_question_row_column_options, include_blank: false,
      collection: options,
      input_html: { class: 'select2 form-control' }

    .form-actions
      = f.button :submit, 'Save'
